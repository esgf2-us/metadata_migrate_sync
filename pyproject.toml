[project]
name = "metadata_migrate_sync"
version = "0.0.1"
description = "metadata migrate and sync"
readme = "README.md"
authors = []
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pydantic>=2.10.6",
    "typing_extensions>=4.12.2",
    "globus-sdk>=3.51.0",
    "requests>=2.32.3",
    "sqlalchemy>=2.0.39",
    "typer>=0.15.2",
    "tqdm>=4.67.1",
    "ntplib>=0.4.0",
]


[tool.uv]
dev-dependencies = [
    "pytest>=7.3.1",
    "pytest-datadir>=1.6.1",
    "mypy>=1.15.0",
    "pytest-snapshot>=0.9.0",
    "responses>=0.25.7",
    "ruff>=0.11.2",
    "types-requests",
    "types-tqdm",
]

[tool.ruff]
line-length = 110  # Default: 88 (same as Black)

[tool.ruff.lint]
# Enable additional rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "ANN", # flake8-annotations
    "S",   # flake8-bandit (security)
    "BLE", # flake8-blind-except
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "ERA", # eradicate (commented-out code)
]

# Ignore specific rules
ignore = [
    "N801", # captialize for class name
    "N806", # varaibles in fuction shall be low case
    "D107", # Missing docstring in __init__
    "ANN101" # Missing type annotation for self
]

[tool.ruff.format]
# Formatting options
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "D",    # Disable pydocstyle for tests
    "S101", # Disable assert checks
    "ANN",  # Disable type annotations
    "ARG"   # Disable unused argument checks
]
"**/test_*.py" = [
    "D",
    "S101",
    "ANN",
    "ARG"
]

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true  # For __init__ methods
allow-star-arg-any = true  # For *args and **kwargs

[tool.mypy]
strict = true
# prevent unimported libraries silently being treated as Any
disallow_any_unimported = true
# show error codes on failure with context
show_error_codes = true
show_error_context = true
# warn if code can't be reached
warn_unreachable = true
# importing following uses default settings
follow_imports = "normal"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/metadata_migrate_sync"]


[tool.pytest.ini_options]
pythonpath = "."
addopts = [
    "--import-mode=importlib",
]

[project.scripts]
esgf15mms= "metadata_migrate_sync.app:app"
